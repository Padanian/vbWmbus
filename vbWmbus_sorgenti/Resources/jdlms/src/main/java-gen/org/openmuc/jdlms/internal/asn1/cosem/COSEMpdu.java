/**
 * This class file was automatically generated by the AXDR compiler that is part of jDLMS (http://www.openmuc.org)
 */

package org.openmuc.jdlms.internal.asn1.cosem;

import java.io.IOException;
import java.io.InputStream;

import org.openmuc.jasn1.ber.ReverseByteArrayOutputStream;
import org.openmuc.jdlms.internal.asn1.axdr.AxdrType;
import org.openmuc.jdlms.internal.asn1.axdr.types.AxdrEnum;
import org.openmuc.jdlms.internal.asn1.axdr.types.AxdrOctetString;

public class COSEMpdu implements AxdrType {

    public byte[] code = null;

    public static enum Choices {
        _ERR_NONE_SELECTED(-1),
        INITIATEREQUEST(1),
        READREQUEST(5),
        WRITEREQUEST(6),
        INITIATERESPONSE(8),
        READRESPONSE(12),
        WRITERESPONSE(13),
        CONFIRMEDSERVICEERROR(14),
        UNCONFIRMEDWRITEREQUEST(22),
        INFORMATIONREPORTREQUEST(24),
        GLO_INITIATEREQUEST(33),
        GLO_READREQUEST(37),
        GLO_WRITEREQUEST(38),
        GLO_INITIATERESPONSE(40),
        GLO_READRESPONSE(44),
        GLO_WRITERESPONSE(45),
        GET_REQUEST(192),
        SET_REQUEST(193),
        EVENT_NOTIFICATION_REQUEST(194),
        ACTION_REQUEST(195),
        GET_RESPONSE(196),
        SET_RESPONSE(197),
        ACTION_RESPONSE(199),
        GLO_GET_REQUEST(200),
        GLO_SET_REQUEST(201),
        GLO_EVENT_NOTIFICATION_REQUEST(202),
        GLO_ACTION_REQUEST(203),
        GLO_GET_RESPONSE(204),
        GLO_SET_RESPONSE(205),
        GLO_ACTION_RESPONSE(207),
        DED_GET_REQUEST(208),
        DED_SET_REQUEST(209),
        DED_EVENT_NOTIFICATION_REQUEST(210),
        DED_ACTIONREQUEST(211),
        DED_GET_RESPONSE(212),
        DED_SET_RESPONSE(213),
        DED_ACTION_RESPONSE(215),
        EXCEPTION_RESPONSE(216),;

        private int value;

        private Choices(int value) {
            this.value = value;
        }

        public int getValue() {
            return this.value;
        }

        public static Choices valueOf(long tagValue) {
            Choices[] values = Choices.values();

            for (Choices c : values) {
                if (c.value == tagValue) {
                    return c;
                }
            }
            return _ERR_NONE_SELECTED;
        }
    }

    private Choices choice;

    public InitiateRequest initiateRequest = null;

    public ReadRequest readRequest = null;

    public WriteRequest writeRequest = null;

    public InitiateResponse initiateResponse = null;

    public ReadResponse readResponse = null;

    public WriteResponse writeResponse = null;

    public ConfirmedServiceError confirmedServiceError = null;

    public UnconfirmedWriteRequest unconfirmedWriteRequest = null;

    public InformationReportRequest informationReportRequest = null;

    public AxdrOctetString gloInitiateRequest = null;

    public AxdrOctetString gloReadRequest = null;

    public AxdrOctetString gloWriteRequest = null;

    public AxdrOctetString gloInitiateResponse = null;

    public AxdrOctetString gloReadResponse = null;

    public AxdrOctetString gloWriteResponse = null;

    public GETRequest getRequest = null;

    public SETRequest setRequest = null;

    public EVENTNOTIFICATIONRequest eventNotificationRequest = null;

    public ACTIONRequest actionRequest = null;

    public GETResponse getResponse = null;

    public SETResponse setResponse = null;

    public ACTIONResponse actionResponse = null;

    public AxdrOctetString gloGetRequest = null;

    public AxdrOctetString gloSetRequest = null;

    public AxdrOctetString gloEventNotificationRequest = null;

    public AxdrOctetString gloActionRequest = null;

    public AxdrOctetString gloGetResponse = null;

    public AxdrOctetString gloSetResponse = null;

    public AxdrOctetString gloActionResponse = null;

    public AxdrOctetString dedGetRequest = null;

    public AxdrOctetString dedSetRequest = null;

    public AxdrOctetString dedEventNotificationRequest = null;

    public AxdrOctetString dedActionRequest = null;

    public AxdrOctetString dedGetResponse = null;

    public AxdrOctetString dedSetResponse = null;

    public AxdrOctetString dedActionResponse = null;

    public EXCEPTIONResponse exceptionResponse = null;

    public COSEMpdu() {
    }

    public COSEMpdu(byte[] code) {
        this.code = code;
    }

    @Override
    public int encode(ReverseByteArrayOutputStream axdrOStream) throws IOException {
        if (code != null) {
            for (int i = code.length - 1; i >= 0; i--) {
                axdrOStream.write(code[i]);
            }
            return code.length;

        }
        if (choice == Choices._ERR_NONE_SELECTED) {
            throw new IOException("Error encoding AxdrChoice: No item in choice was selected.");
        }

        int codeLength = 0;

        if (choice == Choices.EXCEPTION_RESPONSE) {
            codeLength += exceptionResponse.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(216);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.DED_ACTION_RESPONSE) {
            codeLength += dedActionResponse.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(215);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.DED_SET_RESPONSE) {
            codeLength += dedSetResponse.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(213);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.DED_GET_RESPONSE) {
            codeLength += dedGetResponse.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(212);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.DED_ACTIONREQUEST) {
            codeLength += dedActionRequest.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(211);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.DED_EVENT_NOTIFICATION_REQUEST) {
            codeLength += dedEventNotificationRequest.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(210);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.DED_SET_REQUEST) {
            codeLength += dedSetRequest.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(209);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.DED_GET_REQUEST) {
            codeLength += dedGetRequest.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(208);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.GLO_ACTION_RESPONSE) {
            codeLength += gloActionResponse.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(207);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.GLO_SET_RESPONSE) {
            codeLength += gloSetResponse.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(205);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.GLO_GET_RESPONSE) {
            codeLength += gloGetResponse.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(204);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.GLO_ACTION_REQUEST) {
            codeLength += gloActionRequest.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(203);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.GLO_EVENT_NOTIFICATION_REQUEST) {
            codeLength += gloEventNotificationRequest.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(202);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.GLO_SET_REQUEST) {
            codeLength += gloSetRequest.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(201);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.GLO_GET_REQUEST) {
            codeLength += gloGetRequest.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(200);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.ACTION_RESPONSE) {
            codeLength += actionResponse.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(199);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.SET_RESPONSE) {
            codeLength += setResponse.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(197);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.GET_RESPONSE) {
            codeLength += getResponse.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(196);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.ACTION_REQUEST) {
            codeLength += actionRequest.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(195);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.EVENT_NOTIFICATION_REQUEST) {
            codeLength += eventNotificationRequest.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(194);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.SET_REQUEST) {
            codeLength += setRequest.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(193);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.GET_REQUEST) {
            codeLength += getRequest.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(192);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.GLO_WRITERESPONSE) {
            codeLength += gloWriteResponse.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(45);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.GLO_READRESPONSE) {
            codeLength += gloReadResponse.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(44);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.GLO_INITIATERESPONSE) {
            codeLength += gloInitiateResponse.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(40);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.GLO_WRITEREQUEST) {
            codeLength += gloWriteRequest.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(38);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.GLO_READREQUEST) {
            codeLength += gloReadRequest.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(37);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.GLO_INITIATEREQUEST) {
            codeLength += gloInitiateRequest.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(33);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.INFORMATIONREPORTREQUEST) {
            codeLength += informationReportRequest.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(24);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.UNCONFIRMEDWRITEREQUEST) {
            codeLength += unconfirmedWriteRequest.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(22);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.CONFIRMEDSERVICEERROR) {
            codeLength += confirmedServiceError.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(14);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.WRITERESPONSE) {
            codeLength += writeResponse.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(13);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.READRESPONSE) {
            codeLength += readResponse.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(12);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.INITIATERESPONSE) {
            codeLength += initiateResponse.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(8);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.WRITEREQUEST) {
            codeLength += writeRequest.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(6);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.READREQUEST) {
            codeLength += readRequest.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(5);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        if (choice == Choices.INITIATEREQUEST) {
            codeLength += initiateRequest.encode(axdrOStream);
            AxdrEnum c = new AxdrEnum(1);
            codeLength += c.encode(axdrOStream);
            return codeLength;
        }

        // This block should be unreachable
        throw new IOException("Error encoding AxdrChoice: No item in choice was encoded.");
    }

    @Override
    public int decode(InputStream iStream) throws IOException {
        int codeLength = 0;
        AxdrEnum choosen = new AxdrEnum();

        codeLength += choosen.decode(iStream);
        resetChoices();
        this.choice = Choices.valueOf(choosen.getValue());

        if (choice == Choices.INITIATEREQUEST) {
            initiateRequest = new InitiateRequest();
            codeLength += initiateRequest.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.READREQUEST) {
            readRequest = new ReadRequest();
            codeLength += readRequest.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.WRITEREQUEST) {
            writeRequest = new WriteRequest();
            codeLength += writeRequest.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.INITIATERESPONSE) {
            initiateResponse = new InitiateResponse();
            codeLength += initiateResponse.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.READRESPONSE) {
            readResponse = new ReadResponse();
            codeLength += readResponse.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.WRITERESPONSE) {
            writeResponse = new WriteResponse();
            codeLength += writeResponse.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.CONFIRMEDSERVICEERROR) {
            confirmedServiceError = new ConfirmedServiceError();
            codeLength += confirmedServiceError.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.UNCONFIRMEDWRITEREQUEST) {
            unconfirmedWriteRequest = new UnconfirmedWriteRequest();
            codeLength += unconfirmedWriteRequest.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.INFORMATIONREPORTREQUEST) {
            informationReportRequest = new InformationReportRequest();
            codeLength += informationReportRequest.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.GLO_INITIATEREQUEST) {
            gloInitiateRequest = new AxdrOctetString();
            codeLength += gloInitiateRequest.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.GLO_READREQUEST) {
            gloReadRequest = new AxdrOctetString();
            codeLength += gloReadRequest.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.GLO_WRITEREQUEST) {
            gloWriteRequest = new AxdrOctetString();
            codeLength += gloWriteRequest.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.GLO_INITIATERESPONSE) {
            gloInitiateResponse = new AxdrOctetString();
            codeLength += gloInitiateResponse.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.GLO_READRESPONSE) {
            gloReadResponse = new AxdrOctetString();
            codeLength += gloReadResponse.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.GLO_WRITERESPONSE) {
            gloWriteResponse = new AxdrOctetString();
            codeLength += gloWriteResponse.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.GET_REQUEST) {
            getRequest = new GETRequest();
            codeLength += getRequest.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.SET_REQUEST) {
            setRequest = new SETRequest();
            codeLength += setRequest.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.EVENT_NOTIFICATION_REQUEST) {
            eventNotificationRequest = new EVENTNOTIFICATIONRequest();
            codeLength += eventNotificationRequest.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.ACTION_REQUEST) {
            actionRequest = new ACTIONRequest();
            codeLength += actionRequest.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.GET_RESPONSE) {
            getResponse = new GETResponse();
            codeLength += getResponse.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.SET_RESPONSE) {
            setResponse = new SETResponse();
            codeLength += setResponse.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.ACTION_RESPONSE) {
            actionResponse = new ACTIONResponse();
            codeLength += actionResponse.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.GLO_GET_REQUEST) {
            gloGetRequest = new AxdrOctetString();
            codeLength += gloGetRequest.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.GLO_SET_REQUEST) {
            gloSetRequest = new AxdrOctetString();
            codeLength += gloSetRequest.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.GLO_EVENT_NOTIFICATION_REQUEST) {
            gloEventNotificationRequest = new AxdrOctetString();
            codeLength += gloEventNotificationRequest.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.GLO_ACTION_REQUEST) {
            gloActionRequest = new AxdrOctetString();
            codeLength += gloActionRequest.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.GLO_GET_RESPONSE) {
            gloGetResponse = new AxdrOctetString();
            codeLength += gloGetResponse.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.GLO_SET_RESPONSE) {
            gloSetResponse = new AxdrOctetString();
            codeLength += gloSetResponse.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.GLO_ACTION_RESPONSE) {
            gloActionResponse = new AxdrOctetString();
            codeLength += gloActionResponse.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.DED_GET_REQUEST) {
            dedGetRequest = new AxdrOctetString();
            codeLength += dedGetRequest.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.DED_SET_REQUEST) {
            dedSetRequest = new AxdrOctetString();
            codeLength += dedSetRequest.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.DED_EVENT_NOTIFICATION_REQUEST) {
            dedEventNotificationRequest = new AxdrOctetString();
            codeLength += dedEventNotificationRequest.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.DED_ACTIONREQUEST) {
            dedActionRequest = new AxdrOctetString();
            codeLength += dedActionRequest.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.DED_GET_RESPONSE) {
            dedGetResponse = new AxdrOctetString();
            codeLength += dedGetResponse.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.DED_SET_RESPONSE) {
            dedSetResponse = new AxdrOctetString();
            codeLength += dedSetResponse.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.DED_ACTION_RESPONSE) {
            dedActionResponse = new AxdrOctetString();
            codeLength += dedActionResponse.decode(iStream);
            return codeLength;
        }

        if (choice == Choices.EXCEPTION_RESPONSE) {
            exceptionResponse = new EXCEPTIONResponse();
            codeLength += exceptionResponse.decode(iStream);
            return codeLength;
        }

        throw new IOException("Error decoding AxdrChoice: Identifier matched to no item.");
    }

    public void encodeAndSave(int encodingSizeGuess) throws IOException {
        ReverseByteArrayOutputStream axdrOStream = new ReverseByteArrayOutputStream(encodingSizeGuess);
        encode(axdrOStream);
        code = axdrOStream.getArray();
    }

    public Choices getChoiceIndex() {
        return this.choice;
    }

    public void setInitiateRequest(InitiateRequest newVal) {
        resetChoices();
        choice = Choices.INITIATEREQUEST;
        initiateRequest = newVal;
    }

    public void setReadRequest(ReadRequest newVal) {
        resetChoices();
        choice = Choices.READREQUEST;
        readRequest = newVal;
    }

    public void setWriteRequest(WriteRequest newVal) {
        resetChoices();
        choice = Choices.WRITEREQUEST;
        writeRequest = newVal;
    }

    public void setInitiateResponse(InitiateResponse newVal) {
        resetChoices();
        choice = Choices.INITIATERESPONSE;
        initiateResponse = newVal;
    }

    public void setReadResponse(ReadResponse newVal) {
        resetChoices();
        choice = Choices.READRESPONSE;
        readResponse = newVal;
    }

    public void setWriteResponse(WriteResponse newVal) {
        resetChoices();
        choice = Choices.WRITERESPONSE;
        writeResponse = newVal;
    }

    public void setConfirmedServiceError(ConfirmedServiceError newVal) {
        resetChoices();
        choice = Choices.CONFIRMEDSERVICEERROR;
        confirmedServiceError = newVal;
    }

    public void setUnconfirmedWriteRequest(UnconfirmedWriteRequest newVal) {
        resetChoices();
        choice = Choices.UNCONFIRMEDWRITEREQUEST;
        unconfirmedWriteRequest = newVal;
    }

    public void setInformationReportRequest(InformationReportRequest newVal) {
        resetChoices();
        choice = Choices.INFORMATIONREPORTREQUEST;
        informationReportRequest = newVal;
    }

    public void setGloInitiateRequest(AxdrOctetString newVal) {
        resetChoices();
        choice = Choices.GLO_INITIATEREQUEST;
        gloInitiateRequest = newVal;
    }

    public void setGloReadRequest(AxdrOctetString newVal) {
        resetChoices();
        choice = Choices.GLO_READREQUEST;
        gloReadRequest = newVal;
    }

    public void setGloWriteRequest(AxdrOctetString newVal) {
        resetChoices();
        choice = Choices.GLO_WRITEREQUEST;
        gloWriteRequest = newVal;
    }

    public void setGloInitiateResponse(AxdrOctetString newVal) {
        resetChoices();
        choice = Choices.GLO_INITIATERESPONSE;
        gloInitiateResponse = newVal;
    }

    public void setGloReadResponse(AxdrOctetString newVal) {
        resetChoices();
        choice = Choices.GLO_READRESPONSE;
        gloReadResponse = newVal;
    }

    public void setGloWriteResponse(AxdrOctetString newVal) {
        resetChoices();
        choice = Choices.GLO_WRITERESPONSE;
        gloWriteResponse = newVal;
    }

    public void setGetRequest(GETRequest newVal) {
        resetChoices();
        choice = Choices.GET_REQUEST;
        getRequest = newVal;
    }

    public void setSetRequest(SETRequest newVal) {
        resetChoices();
        choice = Choices.SET_REQUEST;
        setRequest = newVal;
    }

    public void setEventNotificationRequest(EVENTNOTIFICATIONRequest newVal) {
        resetChoices();
        choice = Choices.EVENT_NOTIFICATION_REQUEST;
        eventNotificationRequest = newVal;
    }

    public void setActionRequest(ACTIONRequest newVal) {
        resetChoices();
        choice = Choices.ACTION_REQUEST;
        actionRequest = newVal;
    }

    public void setGetResponse(GETResponse newVal) {
        resetChoices();
        choice = Choices.GET_RESPONSE;
        getResponse = newVal;
    }

    public void setSetResponse(SETResponse newVal) {
        resetChoices();
        choice = Choices.SET_RESPONSE;
        setResponse = newVal;
    }

    public void setActionResponse(ACTIONResponse newVal) {
        resetChoices();
        choice = Choices.ACTION_RESPONSE;
        actionResponse = newVal;
    }

    public void setGloGetRequest(AxdrOctetString newVal) {
        resetChoices();
        choice = Choices.GLO_GET_REQUEST;
        gloGetRequest = newVal;
    }

    public void setGloSetRequest(AxdrOctetString newVal) {
        resetChoices();
        choice = Choices.GLO_SET_REQUEST;
        gloSetRequest = newVal;
    }

    public void setGloEventNotificationRequest(AxdrOctetString newVal) {
        resetChoices();
        choice = Choices.GLO_EVENT_NOTIFICATION_REQUEST;
        gloEventNotificationRequest = newVal;
    }

    public void setGloActionRequest(AxdrOctetString newVal) {
        resetChoices();
        choice = Choices.GLO_ACTION_REQUEST;
        gloActionRequest = newVal;
    }

    public void setGloGetResponse(AxdrOctetString newVal) {
        resetChoices();
        choice = Choices.GLO_GET_RESPONSE;
        gloGetResponse = newVal;
    }

    public void setGloSetResponse(AxdrOctetString newVal) {
        resetChoices();
        choice = Choices.GLO_SET_RESPONSE;
        gloSetResponse = newVal;
    }

    public void setGloActionResponse(AxdrOctetString newVal) {
        resetChoices();
        choice = Choices.GLO_ACTION_RESPONSE;
        gloActionResponse = newVal;
    }

    public void setDedGetRequest(AxdrOctetString newVal) {
        resetChoices();
        choice = Choices.DED_GET_REQUEST;
        dedGetRequest = newVal;
    }

    public void setDedSetRequest(AxdrOctetString newVal) {
        resetChoices();
        choice = Choices.DED_SET_REQUEST;
        dedSetRequest = newVal;
    }

    public void setDedEventNotificationRequest(AxdrOctetString newVal) {
        resetChoices();
        choice = Choices.DED_EVENT_NOTIFICATION_REQUEST;
        dedEventNotificationRequest = newVal;
    }

    public void setDedActionRequest(AxdrOctetString newVal) {
        resetChoices();
        choice = Choices.DED_ACTIONREQUEST;
        dedActionRequest = newVal;
    }

    public void setDedGetResponse(AxdrOctetString newVal) {
        resetChoices();
        choice = Choices.DED_GET_RESPONSE;
        dedGetResponse = newVal;
    }

    public void setDedSetResponse(AxdrOctetString newVal) {
        resetChoices();
        choice = Choices.DED_SET_RESPONSE;
        dedSetResponse = newVal;
    }

    public void setDedActionResponse(AxdrOctetString newVal) {
        resetChoices();
        choice = Choices.DED_ACTION_RESPONSE;
        dedActionResponse = newVal;
    }

    public void setExceptionResponse(EXCEPTIONResponse newVal) {
        resetChoices();
        choice = Choices.EXCEPTION_RESPONSE;
        exceptionResponse = newVal;
    }

    private void resetChoices() {
        choice = Choices._ERR_NONE_SELECTED;
        initiateRequest = null;
        readRequest = null;
        writeRequest = null;
        initiateResponse = null;
        readResponse = null;
        writeResponse = null;
        confirmedServiceError = null;
        unconfirmedWriteRequest = null;
        informationReportRequest = null;
        gloInitiateRequest = null;
        gloReadRequest = null;
        gloWriteRequest = null;
        gloInitiateResponse = null;
        gloReadResponse = null;
        gloWriteResponse = null;
        getRequest = null;
        setRequest = null;
        eventNotificationRequest = null;
        actionRequest = null;
        getResponse = null;
        setResponse = null;
        actionResponse = null;
        gloGetRequest = null;
        gloSetRequest = null;
        gloEventNotificationRequest = null;
        gloActionRequest = null;
        gloGetResponse = null;
        gloSetResponse = null;
        gloActionResponse = null;
        dedGetRequest = null;
        dedSetRequest = null;
        dedEventNotificationRequest = null;
        dedActionRequest = null;
        dedGetResponse = null;
        dedSetResponse = null;
        dedActionResponse = null;
        exceptionResponse = null;
    }

    @Override
    public String toString() {
        if (choice == Choices.INITIATEREQUEST) {
            return "choice: {initiateRequest: " + initiateRequest + "}";
        }

        if (choice == Choices.READREQUEST) {
            return "choice: {readRequest: " + readRequest + "}";
        }

        if (choice == Choices.WRITEREQUEST) {
            return "choice: {writeRequest: " + writeRequest + "}";
        }

        if (choice == Choices.INITIATERESPONSE) {
            return "choice: {initiateResponse: " + initiateResponse + "}";
        }

        if (choice == Choices.READRESPONSE) {
            return "choice: {readResponse: " + readResponse + "}";
        }

        if (choice == Choices.WRITERESPONSE) {
            return "choice: {writeResponse: " + writeResponse + "}";
        }

        if (choice == Choices.CONFIRMEDSERVICEERROR) {
            return "choice: {confirmedServiceError: " + confirmedServiceError + "}";
        }

        if (choice == Choices.UNCONFIRMEDWRITEREQUEST) {
            return "choice: {unconfirmedWriteRequest: " + unconfirmedWriteRequest + "}";
        }

        if (choice == Choices.INFORMATIONREPORTREQUEST) {
            return "choice: {informationReportRequest: " + informationReportRequest + "}";
        }

        if (choice == Choices.GLO_INITIATEREQUEST) {
            return "choice: {gloInitiateRequest: " + gloInitiateRequest + "}";
        }

        if (choice == Choices.GLO_READREQUEST) {
            return "choice: {gloReadRequest: " + gloReadRequest + "}";
        }

        if (choice == Choices.GLO_WRITEREQUEST) {
            return "choice: {gloWriteRequest: " + gloWriteRequest + "}";
        }

        if (choice == Choices.GLO_INITIATERESPONSE) {
            return "choice: {gloInitiateResponse: " + gloInitiateResponse + "}";
        }

        if (choice == Choices.GLO_READRESPONSE) {
            return "choice: {gloReadResponse: " + gloReadResponse + "}";
        }

        if (choice == Choices.GLO_WRITERESPONSE) {
            return "choice: {gloWriteResponse: " + gloWriteResponse + "}";
        }

        if (choice == Choices.GET_REQUEST) {
            return "choice: {getRequest: " + getRequest + "}";
        }

        if (choice == Choices.SET_REQUEST) {
            return "choice: {setRequest: " + setRequest + "}";
        }

        if (choice == Choices.EVENT_NOTIFICATION_REQUEST) {
            return "choice: {eventNotificationRequest: " + eventNotificationRequest + "}";
        }

        if (choice == Choices.ACTION_REQUEST) {
            return "choice: {actionRequest: " + actionRequest + "}";
        }

        if (choice == Choices.GET_RESPONSE) {
            return "choice: {getResponse: " + getResponse + "}";
        }

        if (choice == Choices.SET_RESPONSE) {
            return "choice: {setResponse: " + setResponse + "}";
        }

        if (choice == Choices.ACTION_RESPONSE) {
            return "choice: {actionResponse: " + actionResponse + "}";
        }

        if (choice == Choices.GLO_GET_REQUEST) {
            return "choice: {gloGetRequest: " + gloGetRequest + "}";
        }

        if (choice == Choices.GLO_SET_REQUEST) {
            return "choice: {gloSetRequest: " + gloSetRequest + "}";
        }

        if (choice == Choices.GLO_EVENT_NOTIFICATION_REQUEST) {
            return "choice: {gloEventNotificationRequest: " + gloEventNotificationRequest + "}";
        }

        if (choice == Choices.GLO_ACTION_REQUEST) {
            return "choice: {gloActionRequest: " + gloActionRequest + "}";
        }

        if (choice == Choices.GLO_GET_RESPONSE) {
            return "choice: {gloGetResponse: " + gloGetResponse + "}";
        }

        if (choice == Choices.GLO_SET_RESPONSE) {
            return "choice: {gloSetResponse: " + gloSetResponse + "}";
        }

        if (choice == Choices.GLO_ACTION_RESPONSE) {
            return "choice: {gloActionResponse: " + gloActionResponse + "}";
        }

        if (choice == Choices.DED_GET_REQUEST) {
            return "choice: {dedGetRequest: " + dedGetRequest + "}";
        }

        if (choice == Choices.DED_SET_REQUEST) {
            return "choice: {dedSetRequest: " + dedSetRequest + "}";
        }

        if (choice == Choices.DED_EVENT_NOTIFICATION_REQUEST) {
            return "choice: {dedEventNotificationRequest: " + dedEventNotificationRequest + "}";
        }

        if (choice == Choices.DED_ACTIONREQUEST) {
            return "choice: {dedActionRequest: " + dedActionRequest + "}";
        }

        if (choice == Choices.DED_GET_RESPONSE) {
            return "choice: {dedGetResponse: " + dedGetResponse + "}";
        }

        if (choice == Choices.DED_SET_RESPONSE) {
            return "choice: {dedSetResponse: " + dedSetResponse + "}";
        }

        if (choice == Choices.DED_ACTION_RESPONSE) {
            return "choice: {dedActionResponse: " + dedActionResponse + "}";
        }

        if (choice == Choices.EXCEPTION_RESPONSE) {
            return "choice: {exceptionResponse: " + exceptionResponse + "}";
        }

        return "unknown";
    }

}
